Terraform:-
{{
provider "aws" {
  region     = "us-east-1"
  access_key = ""
  secret_key = "32NTkQB0917MUNT4Jb+zniX2SB7oHMipDCzxUNND"
}

resource "aws_instance" "this" {
  ami           = "ami-0ebfd941bbafe70c6"
  instance_type = "t2.micro"
  key_name      = "keyyyyyy"
  tags = {
  Name = "singhal" }
}
~                   
}}}
sudo yum install -y yum-utils shadow-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
sudo yum -y install terraform



curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

mkdir /project
cd /project
vim provider.tf

yum install tree
tree -a 

provider "aws" {
  region     = "us-west-2"
  access_key = "my-access-key"
  secret_key = "my-secret-key"
}


resource "aws_instance" "this" {
  ami                     = "ami-0dcc1e21636832c5d"
  instance_type           = "m5.large"
  host_resource_group_arn = "arn:aws:resource-groups:us-west-2:012345678901:group/win-testhost"
  tenancy                 = "host"
}


######

resource "aws_ebs_volume" "example" {
  availability_zone = "us-west-2a"
  size              = 40

  tags = {
    Name = "HelloWorld"
  }
}

####
resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.example.id
  instance_id = aws_instance.web.id

#####


resource "aws_vpc" "main" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "main"
  }
}

######

resource "aws_subnet" "main" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "Main"
  }
}

#######

resource "aws_route_table" "example" {
  vpc_id = aws_vpc.example.id

  route {
    cidr_block = "10.0.1.0/24"
    gateway_id = aws_internet_gateway.example.id
  }

  route {
    ipv6_cidr_block        = "::/0"
    egress_only_gateway_id = aws_egress_only_internet_gateway.example.id
  }

  tags = {
    Name = "example"
  }
}

######

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id

  tags = {
    Name = "main"
  }
}
####################################################################################################################################
### CODE ######

#security group
resource "aws_security_group" "web_access" {
  name        = "web_access"
  description = "allow ssh and http"
  vpc_id      = aws_vpc.VPC-NEW.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }


}
#security group end here


resource "aws_instance" "web-server" {
  ami                         = "ami-0ebfd941bbafe70c6"
  availability_zone           = "us-east-1a"
  associate_public_ip_address = true
  subnet_id                   = aws_subnet.public.id
  instance_type               = "t2.micro"
  key_name                    = "keyyyyyy"
  security_groups             = ["${aws_security_group.web_access.name}"]
  tags = {
    Name     = "tera-instance"
    Stage    = "testing"
    Location = "INDIA"
  }

}

resource "aws_instance" "web-server-private" {
  ami               = "ami-0ebfd941bbafe70c6"
  availability_zone = "us-east-1a"
  subnet_id         = aws_subnet.private.id
  instance_type     = "t2.micro"
  key_name          = "keyyyyyy"
  security_groups   = ["${aws_security_group.web_access.name}"]
  tags = {
    Name     = "tera-private"
    Stage    = "testing"
    Location = "INDIA"
  }

}

resource "aws_ebs_volume" "vol" {
  availability_zone = "us-east-1a"
  size              = 5

  tags = {
    Name = "terra-vol"
  }
}

resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.vol.id
  instance_id = aws_instance.web-server.id
}

resource "aws_vpc" "VPC-NEW" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "VPC-NEW"
  }
}
resource "aws_subnet" "public" {
  vpc_id            = aws_vpc.VPC-NEW.id
  availability_zone = "us-east-1a"
  cidr_block        = "10.0.0.0/24"

  tags = {
    Name = "public"
  }
}

resource "aws_subnet" "private" {
  vpc_id            = aws_vpc.VPC-NEW.id
  availability_zone = "us-east-1b"
  cidr_block        = "10.0.1.0/24"

  tags = {
    Name = "private"
  }
}

resource "aws_internet_gateway" "main" {
  vpc_id = aws_vpc.VPC-NEW.id

  tags = {
    Name = "main"
  }
}

resource "aws_eip" "nat" {
  domain = "vpc"
  tags = {
    Name = "nat"
  }
}

resource "aws_nat_gateway" "new-nat" {
  allocation_id = aws_eip.nat.id
  subnet_id     = aws_subnet.public.id

  tags = {
    Name = "new-nat"
  }
}


resource "aws_route_table_association" "pub-rt-assc" {
  subnet_id      = aws_subnet.public.id
  route_table_id = aws_route_table.public-route.id
}

resource "aws_route_table_association" "pri-rt-assc" {
  subnet_id      = aws_subnet.private.id
  route_table_id = aws_route_table.private-route.id
}


resource "aws_route_table" "public-route" {
  vpc_id = aws_vpc.VPC-NEW.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.main.id

  }

  tags = {
    Name = "public-route"
  }
}

resource "aws_route_table" "private-route" {
  vpc_id = aws_vpc.VPC-NEW.id

  route {
    cidr_block     = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.new-nat.id

  }

  tags = {
    Name = "private-route"
  }
}
resource "aws_key_pair" "deployer" {
  key_name   = "deployer-key"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9tuMReLrNkdlZkivRt3Nk/WORrWHpxm7q4h+VycLolE+OR+iX3YO2cK8b59G3YokRY8z953DfgeZKndNXKzGFIU9ZDgcNH7jzF2RWLUKBV2qs/489vN4mD9xYlpfPTHm9Eq95nevFzRDg6009yoxVJpmd9hIhmCwp6KiGa9E72RrfWzRBRekWxHDvxyXWVUka8iS7itGRm9uM1+k/sPST82kikHITc1MlnIaoNBjtQAz6N7CxLc9clxa1beblH3jvDo43tgfCiYmbxD6xIyGT6Vr528U+ABUfTGESCoGvmxSZSJ8LZztsbgyPz1kCl6xSO1GSCLjA2Aaf6DziYvxCtN6by94JXHPmu9wGcgUU6TCRO82nKc0KIFKUhxkG6DvaND1wa7862tZi9G1E6ql4s2VLpEX9DvHwFkrq9r8ezCAqR1NvBhWr0+QJeKYuj4p4MqyxzDjy1+ZvjPX6BwQtV9z31uxfVHqOHQArgCef40apws+jKYyLUPQyouY+Rrs= root@ip-172-31-24-113.ap-southeast-1.compute.internal"
}

resource "aws_instance" "ourfirst" {
  ami           = "ami-0aa097a5c0d31430a"
  availability_zone = "ap-southeast-1a"
  instance_type = "t2.micro"
  security_groups = ["${aws_security_group.webserver_access.name}"]
  /* the key zoomkey must be downloaded in your machine from where
  you are executing this code. So first create the key, download it
  and then use it */
  key_name = "deployer-key"
#root disk
  root_block_device {
    volume_size = "10"
    volume_type = "gp2"
    delete_on_termination = true
  }

#additional data disk
 ebs_block_device {
     device_name = "/dev/xvdb"
     volume_size = "10"
     volume_type = "gp2"
     delete_on_termination = true
  }

  user_data = <<-EOF
        #!/bin/bash
        sudo yum install httpd -y
        sudo systemctl start httpd
        sudo systemctl enable httpd
        echo "<h1>sample webserver using terraform</h1>" | sudo tee /var/www/html/index.html
  EOF

  tags = {
    Name  = "hello-India"
    Stage = "testing"
    Location = "India"
  }

}


 terraform init 
 terraform validate
 terraform plan
 terraform apply

